{
  "address": "0x806A290076F9d0D964fC0f28Af8EE2FD58bD8D62",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "guarantorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "guarantorName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "guarantorPublicURL",
          "type": "string"
        }
      ],
      "name": "GuarantorDataAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "verifierName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "verifierPublicURL",
          "type": "string"
        }
      ],
      "name": "OwnershipVerifierDataAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GUARANTOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OWNERSHIP_VERIFIER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "propertyOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "propertyId",
          "type": "uint256"
        }
      ],
      "name": "approveGuaranteeRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "propertyOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "propertyId",
          "type": "uint256"
        }
      ],
      "name": "approveOwnershipVerificationRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guarantorAddress",
          "type": "address"
        }
      ],
      "name": "guaranteeRequestsByGuarantor",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "propertyOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "propertyId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "requestedGuarantor",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isApproved",
              "type": "bool"
            }
          ],
          "internalType": "struct LinkRealVerifiedEntities.PropertyGuaranteeRequest[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "guarantorData",
      "outputs": [
        {
          "internalType": "address",
          "name": "guarantorAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "guarantorName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "guarantorPublicURL",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "guarantorDataArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "guarantorAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "guarantorName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "guarantorPublicURL",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "guarantors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guarantorAddress",
          "type": "address"
        }
      ],
      "name": "isGuarantor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "name": "isOwnershipVerifier",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "name": "ownershipVerificationRequestsByVerifier",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "propertyOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "propertyId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "requestedVerifier",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isApproved",
              "type": "bool"
            }
          ],
          "internalType": "struct LinkRealVerifiedEntities.PropertyOwnershipVerificationRequest[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownershipVerifierData",
      "outputs": [
        {
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "ownershipVerifierName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "ownershipVerifierPublicURL",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownershipVerifierDataArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "ownershipVerifierName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "ownershipVerifierPublicURL",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownershipVerifiers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "propertyOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "propertyId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "requestedGuarantor",
          "type": "address"
        }
      ],
      "name": "requestGuarantee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "propertyOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "propertyId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "requestedVerifier",
          "type": "address"
        }
      ],
      "name": "requestOwnershipVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "returnGuarantorStructs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "guarantorAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "guarantorName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "guarantorPublicURL",
              "type": "string"
            }
          ],
          "internalType": "struct LinkRealVerifiedEntities.GuarantorData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "returnOwnershipVeriferStructs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "verifierAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "ownershipVerifierName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "ownershipVerifierPublicURL",
              "type": "string"
            }
          ],
          "internalType": "struct LinkRealVerifiedEntities.OwnershipVeriferData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guarantorAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "guarantorName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "guarantorPublicURL",
          "type": "string"
        }
      ],
      "name": "setGuarantorData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "verifierName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "verifierPublicURL",
          "type": "string"
        }
      ],
      "name": "setOwnershipVerifierData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x722a44b33e8c0e599affdb066eaf73b502f10bedfa1eaae24b4ffafad27c7450",
  "receipt": {
    "to": null,
    "from": "0x9BD348A8c28A95B256C0262d6Af33ad9912f6073",
    "contractAddress": "0x806A290076F9d0D964fC0f28Af8EE2FD58bD8D62",
    "transactionIndex": 1,
    "gasUsed": "10417992",
    "logsBloom": "0x
    "blockHash": "0x4e7b13ae18a68bd1f04a4e7f0b2c247062d5451a872e2bb966dd9f84fb67cd3e",
    "transactionHash": "0x722a44b33e8c0e599affdb066eaf73b502f10bedfa1eaae24b4ffafad27c7450",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 50455532,
        "transactionHash": "0x722a44b33e8c0e599affdb066eaf73b502f10bedfa1eaae24b4ffafad27c7450",
        "address": "0x806A290076F9d0D964fC0f28Af8EE2FD58bD8D62",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009bd348a8c28a95b256c0262d6af33ad9912f6073",
          "0x0000000000000000000000009bd348a8c28a95b256c0262d6af33ad9912f6073"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x4e7b13ae18a68bd1f04a4e7f0b2c247062d5451a872e2bb966dd9f84fb67cd3e"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 50455532,
        "transactionHash": "0x722a44b33e8c0e599affdb066eaf73b502f10bedfa1eaae24b4ffafad27c7450",
        "address": "0x806A290076F9d0D964fC0f28Af8EE2FD58bD8D62",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
          "0x0000000000000000000000009bd348a8c28a95b256c0262d6af33ad9912f6073",
          "0x0000000000000000000000009bd348a8c28a95b256c0262d6af33ad9912f6073"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x4e7b13ae18a68bd1f04a4e7f0b2c247062d5451a872e2bb966dd9f84fb67cd3e"
      }
    ],
    "blockNumber": 50455532,
    "cumulativeGasUsed": "10417992",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9BD348A8c28A95B256C0262d6Af33ad9912f6073",
    "0x9BD348A8c28A95B256C0262d6Af33ad9912f6073"
  ],
  "numDeployments": 1,
  "solcInputHash": "4c3a913c2a1128aa86f803ade90bb6c2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guarantorAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"guarantorName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"guarantorPublicURL\",\"type\":\"string\"}],\"name\":\"GuarantorDataAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"verifierName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"verifierPublicURL\",\"type\":\"string\"}],\"name\":\"OwnershipVerifierDataAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GUARANTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNERSHIP_VERIFIER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"propertyOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"}],\"name\":\"approveGuaranteeRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"propertyOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"}],\"name\":\"approveOwnershipVerificationRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guarantorAddress\",\"type\":\"address\"}],\"name\":\"guaranteeRequestsByGuarantor\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"propertyOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"requestedGuarantor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"internalType\":\"struct LinkRealVerifiedEntities.PropertyGuaranteeRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"guarantorData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"guarantorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"guarantorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"guarantorPublicURL\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"guarantorDataArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"guarantorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"guarantorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"guarantorPublicURL\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"guarantors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guarantorAddress\",\"type\":\"address\"}],\"name\":\"isGuarantor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"}],\"name\":\"isOwnershipVerifier\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"}],\"name\":\"ownershipVerificationRequestsByVerifier\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"propertyOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"requestedVerifier\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"internalType\":\"struct LinkRealVerifiedEntities.PropertyOwnershipVerificationRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownershipVerifierData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ownershipVerifierName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownershipVerifierPublicURL\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownershipVerifierDataArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ownershipVerifierName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownershipVerifierPublicURL\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownershipVerifiers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"propertyOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"requestedGuarantor\",\"type\":\"address\"}],\"name\":\"requestGuarantee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"propertyOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"propertyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"requestedVerifier\",\"type\":\"address\"}],\"name\":\"requestOwnershipVerification\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnGuarantorStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"guarantorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"guarantorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"guarantorPublicURL\",\"type\":\"string\"}],\"internalType\":\"struct LinkRealVerifiedEntities.GuarantorData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnOwnershipVeriferStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ownershipVerifierName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownershipVerifierPublicURL\",\"type\":\"string\"}],\"internalType\":\"struct LinkRealVerifiedEntities.OwnershipVeriferData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guarantorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"guarantorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"guarantorPublicURL\",\"type\":\"string\"}],\"name\":\"setGuarantorData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"verifierName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"verifierPublicURL\",\"type\":\"string\"}],\"name\":\"setOwnershipVerifierData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approveGuaranteeRequest(address,uint256)\":{\"details\":\"This function just used temporaily to get request status to frontend via one function call.\"},\"approveOwnershipVerificationRequest(address,uint256)\":{\"details\":\"This function just used temporaily to get request status to frontend via one function call. Request status should be either stored off chain or fetch from PropertyData onchain\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"requestGuarantee(address,uint256,address)\":{\"details\":\"This requesting guarantee can be done via this function or off-chain logic\"},\"requestOwnershipVerification(address,uint256,address)\":{\"details\":\"This requesting ownership verification can be done via this function or off-chain logic\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LinkRealVerifiedEntities.sol\":\"LinkRealVerifiedEntities\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"contracts/LinkRealVerifiedEntities.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\n\\ncontract LinkRealVerifiedEntities is Pausable, AccessControl {\\n\\tbytes32 public constant PAUSER_ROLE = keccak256(\\\"PAUSER_ROLE\\\");\\n\\tbytes32 public constant OWNERSHIP_VERIFIER_ROLE =\\n\\t\\tkeccak256(\\\"OWNERSHIP_VERIFIER_ROLE\\\");\\n\\tbytes32 public constant GUARANTOR_ROLE = keccak256(\\\"GUARANTOR_ROLE\\\");\\n\\n\\tstruct OwnershipVeriferData {\\n\\t\\taddress verifierAddress;\\n\\t\\tstring ownershipVerifierName;\\n\\t\\tstring ownershipVerifierPublicURL;\\n\\t}\\n\\taddress[] public ownershipVerifiers;\\n\\n\\tstruct GuarantorData {\\n\\t\\taddress guarantorAddress;\\n\\t\\tstring guarantorName;\\n\\t\\tstring guarantorPublicURL;\\n\\t}\\n\\taddress[] public guarantors;\\n\\n\\tOwnershipVeriferData[] public ownershipVerifierDataArray; // TODO: remove reduntant data storage onchain and fetch via offchain DS\\n\\tGuarantorData[] public guarantorDataArray; // TODO: remove reduntant data storage onchain and fetch via offchain DS\\n\\n\\tmapping(address => OwnershipVeriferData) public ownershipVerifierData; // verifierAddress => OwnershipVeriferData\\n\\tmapping(address => GuarantorData) public guarantorData; // guarantorAddress => GuarantorData\\n\\n\\tstruct PropertyOwnershipVerificationRequest {\\n\\t\\taddress propertyOwner;\\n\\t\\tuint propertyId;\\n\\t\\taddress requestedVerifier;\\n\\t\\tbool isApproved;\\n\\t}\\n\\tstruct PropertyGuaranteeRequest {\\n\\t\\taddress propertyOwner;\\n\\t\\tuint propertyId;\\n\\t\\taddress requestedGuarantor;\\n\\t\\tbool isApproved;\\n\\t}\\n\\n\\tmapping(address => PropertyOwnershipVerificationRequest[])\\n\\t\\tprivate _ownershipVerificationRequestsByVerifier; // verifierAddress => PropertyOwnershipVerificationRequest[]\\n\\tmapping(address => PropertyGuaranteeRequest[])\\n\\t\\tprivate _guaranteeRequestsByGuarantor; // guarantorAddress => PropertyGuaranteeRequest[]\\n\\n\\t// mapping(address => mapping(address => uint[])) public ownershipVerificationRequests; // verifer[propertyOwner] => propertyIds\\n\\t// mapping(address => mapping(address => uint[])) public guaranteeRequests; // guarantor[propertyOwner] => propertyIds\\n\\n\\tevent OwnershipVerifierDataAdded(\\n\\t\\taddress indexed verifierAddress,\\n\\t\\tstring verifierName,\\n\\t\\tstring verifierPublicURL\\n\\t);\\n\\tevent GuarantorDataAdded(\\n\\t\\taddress indexed guarantorAddress,\\n\\t\\tstring guarantorName,\\n\\t\\tstring guarantorPublicURL\\n\\t);\\n\\n\\tconstructor(address defaultAdmin, address pauser) {\\n\\t\\t_grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\\n\\t\\t_grantRole(PAUSER_ROLE, pauser);\\n\\t}\\n\\n\\tfunction isOwnershipVerifier(\\n\\t\\taddress verifierAddress\\n\\t) public view returns (bool) {\\n\\t\\treturn\\n\\t\\t\\tbytes(ownershipVerifierData[verifierAddress].ownershipVerifierName)\\n\\t\\t\\t\\t.length != 0;\\n\\t}\\n\\n\\tfunction isGuarantor(address guarantorAddress) public view returns (bool) {\\n\\t\\treturn bytes(guarantorData[guarantorAddress].guarantorName).length != 0;\\n\\t}\\n\\n\\tfunction returnOwnershipVeriferStructs()\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\treturns (OwnershipVeriferData[] memory)\\n\\t{\\n\\t\\treturn ownershipVerifierDataArray;\\n\\t}\\n\\n\\tfunction returnGuarantorStructs()\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\treturns (GuarantorData[] memory)\\n\\t{\\n\\t\\treturn guarantorDataArray;\\n\\t}\\n\\n\\tfunction ownershipVerificationRequestsByVerifier(\\n\\t\\taddress verifierAddress\\n\\t) public view returns (PropertyOwnershipVerificationRequest[] memory) {\\n\\t\\treturn _ownershipVerificationRequestsByVerifier[verifierAddress];\\n\\t}\\n\\n\\tfunction guaranteeRequestsByGuarantor(\\n\\t\\taddress guarantorAddress\\n\\t) public view returns (PropertyGuaranteeRequest[] memory) {\\n\\t\\treturn _guaranteeRequestsByGuarantor[guarantorAddress];\\n\\t}\\n\\n\\t/**\\n\\t * @dev This requesting ownership verification can be done via this function or off-chain logic\\n\\t */\\n\\tfunction requestOwnershipVerification(\\n\\t\\taddress propertyOwner,\\n\\t\\tuint propertyId,\\n\\t\\taddress requestedVerifier\\n\\t) public {\\n\\t\\trequire(isOwnershipVerifier(requestedVerifier), \\\"Invalid verifier\\\");\\n\\t\\t// save ownership verification request\\n\\t\\t_ownershipVerificationRequestsByVerifier[requestedVerifier].push(\\n\\t\\t\\tPropertyOwnershipVerificationRequest(\\n\\t\\t\\t\\tpropertyOwner,\\n\\t\\t\\t\\tpropertyId,\\n\\t\\t\\t\\trequestedVerifier,\\n\\t\\t\\t\\tfalse\\n\\t\\t\\t)\\n\\t\\t);\\n\\t}\\n\\n\\t/**\\n\\t * @dev This requesting guarantee can be done via this function or off-chain logic\\n\\t */\\n\\tfunction requestGuarantee(\\n\\t\\taddress propertyOwner,\\n\\t\\tuint propertyId,\\n\\t\\taddress requestedGuarantor\\n\\t) public {\\n\\t\\trequire(isGuarantor(requestedGuarantor), \\\"Invalid guarantor\\\");\\n\\t\\t// save guarantee request\\n\\t\\t_guaranteeRequestsByGuarantor[requestedGuarantor].push(\\n\\t\\t\\tPropertyGuaranteeRequest(\\n\\t\\t\\t\\tpropertyOwner,\\n\\t\\t\\t\\tpropertyId,\\n\\t\\t\\t\\trequestedGuarantor,\\n\\t\\t\\t\\tfalse\\n\\t\\t\\t)\\n\\t\\t);\\n\\t}\\n\\n\\t/**\\n\\t * @dev This function just used temporaily to get request status to frontend via one function call. Request status should be either stored off chain or fetch from PropertyData onchain\\n\\t */\\n\\tfunction approveOwnershipVerificationRequest(\\n\\t\\taddress propertyOwner,\\n\\t\\tuint propertyId\\n\\t) public onlyRole(OWNERSHIP_VERIFIER_ROLE) {\\n\\t\\tPropertyOwnershipVerificationRequest[]\\n\\t\\t\\tstorage requests = _ownershipVerificationRequestsByVerifier[\\n\\t\\t\\t\\tmsg.sender\\n\\t\\t\\t];\\n\\t\\tfor (uint i = 0; i < requests.length; i++) {\\n\\t\\t\\tif (\\n\\t\\t\\t\\trequests[i].propertyOwner == propertyOwner &&\\n\\t\\t\\t\\trequests[i].propertyId == propertyId\\n\\t\\t\\t) {\\n\\t\\t\\t\\trequests[i].isApproved = true;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t * @dev This function just used temporaily to get request status to frontend via one function call.\\n\\t */\\n\\tfunction approveGuaranteeRequest(\\n\\t\\taddress propertyOwner,\\n\\t\\tuint propertyId\\n\\t) public onlyRole(GUARANTOR_ROLE) {\\n\\t\\tPropertyGuaranteeRequest[]\\n\\t\\t\\tstorage requests = _guaranteeRequestsByGuarantor[msg.sender];\\n\\t\\tfor (uint i = 0; i < requests.length; i++) {\\n\\t\\t\\tif (\\n\\t\\t\\t\\trequests[i].propertyOwner == propertyOwner &&\\n\\t\\t\\t\\trequests[i].propertyId == propertyId\\n\\t\\t\\t) {\\n\\t\\t\\t\\trequests[i].isApproved = true;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction setOwnershipVerifierData(\\n\\t\\taddress verifierAddress,\\n\\t\\tstring memory verifierName,\\n\\t\\tstring memory verifierPublicURL\\n\\t) public onlyRole(DEFAULT_ADMIN_ROLE) {\\n\\t\\tOwnershipVeriferData memory _verifierData = OwnershipVeriferData(\\n\\t\\t\\tverifierAddress,\\n\\t\\t\\tverifierName,\\n\\t\\t\\tverifierPublicURL\\n\\t\\t);\\n\\t\\townershipVerifierData[verifierAddress] = _verifierData;\\n\\t\\townershipVerifiers.push(verifierAddress);\\n\\t\\townershipVerifierDataArray.push(_verifierData);\\n\\t\\t_grantRole(OWNERSHIP_VERIFIER_ROLE, verifierAddress);\\n\\t\\temit OwnershipVerifierDataAdded(\\n\\t\\t\\tverifierAddress,\\n\\t\\t\\tverifierName,\\n\\t\\t\\tverifierPublicURL\\n\\t\\t);\\n\\t}\\n\\n\\tfunction setGuarantorData(\\n\\t\\taddress guarantorAddress,\\n\\t\\tstring memory guarantorName,\\n\\t\\tstring memory guarantorPublicURL\\n\\t) public onlyRole(DEFAULT_ADMIN_ROLE) {\\n\\t\\tGuarantorData memory _guarantorData = GuarantorData(\\n\\t\\t\\tguarantorAddress,\\n\\t\\t\\tguarantorName,\\n\\t\\t\\tguarantorPublicURL\\n\\t\\t);\\n\\t\\tguarantorData[guarantorAddress] = _guarantorData;\\n\\t\\tguarantors.push(guarantorAddress);\\n\\t\\tguarantorDataArray.push(_guarantorData);\\n\\t\\t_grantRole(GUARANTOR_ROLE, guarantorAddress);\\n\\t\\temit GuarantorDataAdded(\\n\\t\\t\\tguarantorAddress,\\n\\t\\t\\tguarantorName,\\n\\t\\t\\tguarantorPublicURL\\n\\t\\t);\\n\\t}\\n\\n\\tfunction pause() public onlyRole(PAUSER_ROLE) {\\n\\t\\t_pause();\\n\\t}\\n\\n\\tfunction unpause() public onlyRole(PAUSER_ROLE) {\\n\\t\\t_unpause();\\n\\t}\\n}\\n\",\"keccak256\":\"0xf2640e04b8cd296225987bffb0150ca1dee529518521f7c509aa08ad47ae8d69\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611de1380380611de183398101604081905261002f91610127565b6000805460ff191681556100439083610076565b5061006e7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a82610076565b50505061015a565b60008281526001602090815260408083206001600160a01b038516845290915281205460ff166101015760008381526001602081815260408084206001600160a01b0387168086529252808420805460ff19169093179092559051339286917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a4506001610105565b5060005b92915050565b80516001600160a01b038116811461012257600080fd5b919050565b6000806040838503121561013a57600080fd5b6101438361010b565b91506101516020840161010b565b90509250929050565b611c78806101696000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80637fadc3691161010f578063a4f087f0116100a2578063cda95b4511610071578063cda95b4514610465578063d547741f14610478578063e63ab1e91461048b578063ecb386a6146104b257600080fd5b8063a4f087f0146103f8578063aa4314bd14610418578063af32452a1461042b578063afdeaf151461043e57600080fd5b806391d14854116100de57806391d14854146103b5578063969eac4d146103c8578063a1686c17146103dd578063a217fddf146103f057600080fd5b80637fadc3691461035c5780637ff5fae11461036f5780638456cb59146103825780638b1746a71461038a57600080fd5b80634efc10b0116101875780635c5d4821116101565780635c5d4821146103045780635c975abb146103175780635cf87e8b1461032257806377ed10651461033557600080fd5b80634efc10b0146102a757806357b17c8c146102bc57806357ce881d146102cf5780635aced884146102e257600080fd5b80632f2ff15d116101c35780632f2ff15d1461025957806336568abe1461026c5780633a2e54e11461027f5780633f4ba83a1461029f57600080fd5b806301ffc9a7146101ea5780631d8e1ee114610212578063248a9ca314610227575b600080fd5b6101fd6101f836600461161c565b6104c5565b60405190151581526020015b60405180910390f35b610225610220366004611669565b6104fc565b005b61024b6102353660046116a5565b6000908152600160208190526040909120015490565b604051908152602001610209565b6102256102673660046116be565b6105ed565b61022561027a3660046116be565b610619565b61029261028d3660046116ea565b610651565b6040516102099190611705565b610225610700565b6102af610735565b6040516102099190611810565b6102256102ca36600461191a565b6108ce565b6102256102dd366004611669565b610aa3565b6102f56102f03660046116a5565b610b8e565b60405161020993929190611993565b6102f56103123660046116ea565b610cde565b60005460ff166101fd565b61022561033036600461191a565b610d0a565b61024b7f59646329c61c5d94892753ef41cd88158fe7a7302ebfce1612f9f9d0cad2643181565b6101fd61036a3660046116ea565b610ed0565b6102f561037d3660046116a5565b610eff565b610225610f0f565b61039d6103983660046116a5565b610f41565b6040516001600160a01b039091168152602001610209565b6101fd6103c33660046116be565b610f6b565b6103d0610f96565b60405161020991906119d3565b6101fd6103eb3660046116ea565b611126565b61024b600081565b61040b6104063660046116ea565b61114c565b6040516102099190611a2c565b610225610426366004611a9d565b6111ed565b610225610439366004611a9d565b6112eb565b61024b7f2d7a7544ecdf54eb35b6efa91f9c2c22f6bf39cb49dc786ed943755756b0830681565b6102f56104733660046116ea565b6113b5565b6102256104863660046116be565b6113e1565b61024b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b61039d6104c03660046116a5565b611407565b60006001600160e01b03198216637965db0b60e01b14806104f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b61050581611126565b61054a5760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21033bab0b930b73a37b960791b60448201526064015b60405180910390fd5b6001600160a01b0390811660008181526009602090815260408083208151608081018352978616885287830196875290870193845260608701838152815460018082018455928552929093209651600390920290960180546001600160a01b03191691851691909117815593519484019490945551600290920180549351929091166001600160a81b031990931692909217600160a01b91151591909102179055565b6000828152600160208190526040909120015461060981611417565b6106138383611421565b50505050565b6001600160a01b03811633146106425760405163334bd91960e11b815260040160405180910390fd5b61064c828261149a565b505050565b6001600160a01b0381166000908152600960209081526040808320805482518185028101850190935280835260609492939192909184015b828210156106f5576000848152602090819020604080516080810182526003860290920180546001600160a01b0390811684526001808301548587015260029092015490811692840192909252600160a01b90910460ff16151560608301529083529092019101610689565b505050509050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61072a81611417565b610732611507565b50565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156108c557600084815260209081902060408051606081019091526003850290910180546001600160a01b0316825260018101805492939192918401916107a290611ac7565b80601f01602080910402602001604051908101604052809291908181526020018280546107ce90611ac7565b801561081b5780601f106107f05761010080835404028352916020019161081b565b820191906000526020600020905b8154815290600101906020018083116107fe57829003601f168201915b5050505050815260200160028201805461083490611ac7565b80601f016020809104026020016040519081016040528092919081815260200182805461086090611ac7565b80156108ad5780601f10610882576101008083540402835291602001916108ad565b820191906000526020600020905b81548152906001019060200180831161089057829003601f168201915b50505050508152505081526020019060010190610759565b50505050905090565b60006108d981611417565b604080516060810182526001600160a01b03868116808352602080840188815284860188905260009283526007909152939020825181546001600160a01b031916921691909117815591519091829160018201906109379082611b48565b506040820151600282019061094c9082611b48565b505060038054600181810183557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180546001600160a01b03808b166001600160a01b0319928316179092556005805493840181556000528551929093027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0810180549390921692909316919091178155602084015184935090917f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db10190610a169082611b48565b5060408201516002820190610a2b9082611b48565b505050610a587f2d7a7544ecdf54eb35b6efa91f9c2c22f6bf39cb49dc786ed943755756b0830686611421565b50846001600160a01b03167f1a5f38da50b89506ef831a2aceb6c8db10f3b44686be257b00491e12c5d1a7638585604051610a94929190611c07565b60405180910390a25050505050565b610aac81610ed0565b610aeb5760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103b32b934b334b2b960811b6044820152606401610541565b6001600160a01b0390811660008181526008602090815260408083208151608081018352978616885287830196875290870193845260608701838152815460018082018455928552929093209651600390920290960180546001600160a01b03191691851691909117815593519484019490945551600290920180549351929091166001600160a81b031990931692909217600160a01b91151591909102179055565b60058181548110610b9e57600080fd5b6000918252602090912060039091020180546001820180546001600160a01b03909216935090610bcd90611ac7565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf990611ac7565b8015610c465780601f10610c1b57610100808354040283529160200191610c46565b820191906000526020600020905b815481529060010190602001808311610c2957829003601f168201915b505050505090806002018054610c5b90611ac7565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8790611ac7565b8015610cd45780601f10610ca957610100808354040283529160200191610cd4565b820191906000526020600020905b815481529060010190602001808311610cb757829003601f168201915b5050505050905083565b600660205260009081526040902080546001820180546001600160a01b039092169291610bcd90611ac7565b6000610d1581611417565b604080516060810182526001600160a01b03868116808352602080840188815284860188905260009283526006909152939020825181546001600160a01b03191692169190911781559151909182916001820190610d739082611b48565b5060408201516002820190610d889082611b48565b50506002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03808a166001600160a01b031992831617909255600480549384018155600052845160039093027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810180549490931693909116929092178155602084015184935090917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c0190610e529082611b48565b5060408201516002820190610e679082611b48565b505050610e947f59646329c61c5d94892753ef41cd88158fe7a7302ebfce1612f9f9d0cad2643186611421565b50846001600160a01b03167f940c106e552cb29d24dbdaf5c1aa7d9e9f7049f65e224f840cf072f0c9a006e88585604051610a94929190611c07565b6001600160a01b03811660009081526006602052604081206001018054610ef690611ac7565b15159392505050565b60048181548110610b9e57600080fd5b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610f3981611417565b610732611559565b60028181548110610f5157600080fd5b6000918252602090912001546001600160a01b0316905081565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156108c557600084815260209081902060408051606081019091526003850290910180546001600160a01b03168252600181018054929391929184019161100390611ac7565b80601f016020809104026020016040519081016040528092919081815260200182805461102f90611ac7565b801561107c5780601f106110515761010080835404028352916020019161107c565b820191906000526020600020905b81548152906001019060200180831161105f57829003601f168201915b5050505050815260200160028201805461109590611ac7565b80601f01602080910402602001604051908101604052809291908181526020018280546110c190611ac7565b801561110e5780601f106110e35761010080835404028352916020019161110e565b820191906000526020600020905b8154815290600101906020018083116110f157829003601f168201915b50505050508152505081526020019060010190610fba565b6001600160a01b03811660009081526007602052604081206001018054610ef690611ac7565b6001600160a01b03811660009081526008602090815260408083208054825181850281018501909352808352606094929391929091840182156106f5576000848152602090819020604080516080810182526003860290920180546001600160a01b0390811684526001808301548587015260029092015490811692840192909252600160a01b90910460ff16151560608301529083529092019101610689565b7f2d7a7544ecdf54eb35b6efa91f9c2c22f6bf39cb49dc786ed943755756b0830661121781611417565b336000908152600960205260408120905b81548110156112e457846001600160a01b031682828154811061124d5761124d611c2c565b60009182526020909120600390910201546001600160a01b031614801561129657508382828154811061128257611282611c2c565b906000526020600020906003020160010154145b156112dc5760018282815481106112af576112af611c2c565b906000526020600020906003020160020160146101000a81548160ff0219169083151502179055506112e4565b600101611228565b5050505050565b7f59646329c61c5d94892753ef41cd88158fe7a7302ebfce1612f9f9d0cad2643161131581611417565b336000908152600860205260408120905b81548110156112e457846001600160a01b031682828154811061134b5761134b611c2c565b60009182526020909120600390910201546001600160a01b031614801561139457508382828154811061138057611380611c2c565b906000526020600020906003020160010154145b156113ad5760018282815481106112af576112af611c2c565b600101611326565b600760205260009081526040902080546001820180546001600160a01b039092169291610bcd90611ac7565b600082815260016020819052604090912001546113fd81611417565b610613838361149a565b60038181548110610f5157600080fd5b6107328133611596565b600061142d8383610f6b565b6114925760008381526001602081815260408084206001600160a01b0387168086529252808420805460ff19169093179092559051339286917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45060016104f6565b5060006104f6565b60006114a68383610f6b565b156114925760008381526001602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104f6565b61150f6115d3565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6115616115f8565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861153c3390565b6115a08282610f6b565b6115cf5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610541565b5050565b60005460ff166115f657604051638dfc202b60e01b815260040160405180910390fd5b565b60005460ff16156115f65760405163d93c066560e01b815260040160405180910390fd5b60006020828403121561162e57600080fd5b81356001600160e01b03198116811461164657600080fd5b9392505050565b80356001600160a01b038116811461166457600080fd5b919050565b60008060006060848603121561167e57600080fd5b6116878461164d565b92506020840135915061169c6040850161164d565b90509250925092565b6000602082840312156116b757600080fd5b5035919050565b600080604083850312156116d157600080fd5b823591506116e16020840161164d565b90509250929050565b6000602082840312156116fc57600080fd5b6116468261164d565b602080825282518282018190526000918401906040840190835b818110156117765761176083855180516001600160a01b03908116835260208083015190840152604080830151909116908301526060908101511515910152565b602093909301926080929092019160010161171f565b509095945050505050565b6000815180845260005b818110156117a75760208185018101518683018201520161178b565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b03815116825260006020820151606060208501526117ee6060850182611781565b9050604083015184820360408601526118078282611781565b95945050505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b8281101561186957603f198786030184526118548583516117c7565b94506020938401939190910190600101611838565b50929695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261189c57600080fd5b813567ffffffffffffffff8111156118b6576118b6611875565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156118e5576118e5611875565b6040528181528382016020018510156118fd57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561192f57600080fd5b6119388461164d565b9250602084013567ffffffffffffffff81111561195457600080fd5b6119608682870161188b565b925050604084013567ffffffffffffffff81111561197d57600080fd5b6119898682870161188b565b9150509250925092565b6001600160a01b03841681526060602082018190526000906119b790830185611781565b82810360408401526119c98185611781565b9695505050505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b8281101561186957603f19878603018452611a178583516117c7565b945060209384019391909101906001016119fb565b602080825282518282018190526000918401906040840190835b8181101561177657611a8783855180516001600160a01b03908116835260208083015190840152604080830151909116908301526060908101511515910152565b6020939093019260809290920191600101611a46565b60008060408385031215611ab057600080fd5b611ab98361164d565b946020939093013593505050565b600181811c90821680611adb57607f821691505b602082108103611afb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561064c57806000526020600020601f840160051c81016020851015611b285750805b601f840160051c820191505b818110156112e45760008155600101611b34565b815167ffffffffffffffff811115611b6257611b62611875565b611b7681611b708454611ac7565b84611b01565b6020601f821160018114611baa5760008315611b925750848201515b600019600385901b1c1916600184901b1784556112e4565b600084815260208120601f198516915b82811015611bda5787850151825560209485019460019092019101611bba565b5084821015611bf85786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b604081526000611c1a6040830185611781565b82810360208401526118078185611781565b634e487b7160e01b600052603260045260246000fdfea26469706673582212206a082957d5d0c476e76eb07794b8fa272a972bf99c03183a679697eaa2de1d8b64736f6c634300081a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80637fadc3691161010f578063a4f087f0116100a2578063cda95b4511610071578063cda95b4514610465578063d547741f14610478578063e63ab1e91461048b578063ecb386a6146104b257600080fd5b8063a4f087f0146103f8578063aa4314bd14610418578063af32452a1461042b578063afdeaf151461043e57600080fd5b806391d14854116100de57806391d14854146103b5578063969eac4d146103c8578063a1686c17146103dd578063a217fddf146103f057600080fd5b80637fadc3691461035c5780637ff5fae11461036f5780638456cb59146103825780638b1746a71461038a57600080fd5b80634efc10b0116101875780635c5d4821116101565780635c5d4821146103045780635c975abb146103175780635cf87e8b1461032257806377ed10651461033557600080fd5b80634efc10b0146102a757806357b17c8c146102bc57806357ce881d146102cf5780635aced884146102e257600080fd5b80632f2ff15d116101c35780632f2ff15d1461025957806336568abe1461026c5780633a2e54e11461027f5780633f4ba83a1461029f57600080fd5b806301ffc9a7146101ea5780631d8e1ee114610212578063248a9ca314610227575b600080fd5b6101fd6101f836600461161c565b6104c5565b60405190151581526020015b60405180910390f35b610225610220366004611669565b6104fc565b005b61024b6102353660046116a5565b6000908152600160208190526040909120015490565b604051908152602001610209565b6102256102673660046116be565b6105ed565b61022561027a3660046116be565b610619565b61029261028d3660046116ea565b610651565b6040516102099190611705565b610225610700565b6102af610735565b6040516102099190611810565b6102256102ca36600461191a565b6108ce565b6102256102dd366004611669565b610aa3565b6102f56102f03660046116a5565b610b8e565b60405161020993929190611993565b6102f56103123660046116ea565b610cde565b60005460ff166101fd565b61022561033036600461191a565b610d0a565b61024b7f59646329c61c5d94892753ef41cd88158fe7a7302ebfce1612f9f9d0cad2643181565b6101fd61036a3660046116ea565b610ed0565b6102f561037d3660046116a5565b610eff565b610225610f0f565b61039d6103983660046116a5565b610f41565b6040516001600160a01b039091168152602001610209565b6101fd6103c33660046116be565b610f6b565b6103d0610f96565b60405161020991906119d3565b6101fd6103eb3660046116ea565b611126565b61024b600081565b61040b6104063660046116ea565b61114c565b6040516102099190611a2c565b610225610426366004611a9d565b6111ed565b610225610439366004611a9d565b6112eb565b61024b7f2d7a7544ecdf54eb35b6efa91f9c2c22f6bf39cb49dc786ed943755756b0830681565b6102f56104733660046116ea565b6113b5565b6102256104863660046116be565b6113e1565b61024b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b61039d6104c03660046116a5565b611407565b60006001600160e01b03198216637965db0b60e01b14806104f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b61050581611126565b61054a5760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21033bab0b930b73a37b960791b60448201526064015b60405180910390fd5b6001600160a01b0390811660008181526009602090815260408083208151608081018352978616885287830196875290870193845260608701838152815460018082018455928552929093209651600390920290960180546001600160a01b03191691851691909117815593519484019490945551600290920180549351929091166001600160a81b031990931692909217600160a01b91151591909102179055565b6000828152600160208190526040909120015461060981611417565b6106138383611421565b50505050565b6001600160a01b03811633146106425760405163334bd91960e11b815260040160405180910390fd5b61064c828261149a565b505050565b6001600160a01b0381166000908152600960209081526040808320805482518185028101850190935280835260609492939192909184015b828210156106f5576000848152602090819020604080516080810182526003860290920180546001600160a01b0390811684526001808301548587015260029092015490811692840192909252600160a01b90910460ff16151560608301529083529092019101610689565b505050509050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61072a81611417565b610732611507565b50565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156108c557600084815260209081902060408051606081019091526003850290910180546001600160a01b0316825260018101805492939192918401916107a290611ac7565b80601f01602080910402602001604051908101604052809291908181526020018280546107ce90611ac7565b801561081b5780601f106107f05761010080835404028352916020019161081b565b820191906000526020600020905b8154815290600101906020018083116107fe57829003601f168201915b5050505050815260200160028201805461083490611ac7565b80601f016020809104026020016040519081016040528092919081815260200182805461086090611ac7565b80156108ad5780601f10610882576101008083540402835291602001916108ad565b820191906000526020600020905b81548152906001019060200180831161089057829003601f168201915b50505050508152505081526020019060010190610759565b50505050905090565b60006108d981611417565b604080516060810182526001600160a01b03868116808352602080840188815284860188905260009283526007909152939020825181546001600160a01b031916921691909117815591519091829160018201906109379082611b48565b506040820151600282019061094c9082611b48565b505060038054600181810183557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180546001600160a01b03808b166001600160a01b0319928316179092556005805493840181556000528551929093027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0810180549390921692909316919091178155602084015184935090917f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db10190610a169082611b48565b5060408201516002820190610a2b9082611b48565b505050610a587f2d7a7544ecdf54eb35b6efa91f9c2c22f6bf39cb49dc786ed943755756b0830686611421565b50846001600160a01b03167f1a5f38da50b89506ef831a2aceb6c8db10f3b44686be257b00491e12c5d1a7638585604051610a94929190611c07565b60405180910390a25050505050565b610aac81610ed0565b610aeb5760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103b32b934b334b2b960811b6044820152606401610541565b6001600160a01b0390811660008181526008602090815260408083208151608081018352978616885287830196875290870193845260608701838152815460018082018455928552929093209651600390920290960180546001600160a01b03191691851691909117815593519484019490945551600290920180549351929091166001600160a81b031990931692909217600160a01b91151591909102179055565b60058181548110610b9e57600080fd5b6000918252602090912060039091020180546001820180546001600160a01b03909216935090610bcd90611ac7565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf990611ac7565b8015610c465780601f10610c1b57610100808354040283529160200191610c46565b820191906000526020600020905b815481529060010190602001808311610c2957829003601f168201915b505050505090806002018054610c5b90611ac7565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8790611ac7565b8015610cd45780601f10610ca957610100808354040283529160200191610cd4565b820191906000526020600020905b815481529060010190602001808311610cb757829003601f168201915b5050505050905083565b600660205260009081526040902080546001820180546001600160a01b039092169291610bcd90611ac7565b6000610d1581611417565b604080516060810182526001600160a01b03868116808352602080840188815284860188905260009283526006909152939020825181546001600160a01b03191692169190911781559151909182916001820190610d739082611b48565b5060408201516002820190610d889082611b48565b50506002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03808a166001600160a01b031992831617909255600480549384018155600052845160039093027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810180549490931693909116929092178155602084015184935090917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c0190610e529082611b48565b5060408201516002820190610e679082611b48565b505050610e947f59646329c61c5d94892753ef41cd88158fe7a7302ebfce1612f9f9d0cad2643186611421565b50846001600160a01b03167f940c106e552cb29d24dbdaf5c1aa7d9e9f7049f65e224f840cf072f0c9a006e88585604051610a94929190611c07565b6001600160a01b03811660009081526006602052604081206001018054610ef690611ac7565b15159392505050565b60048181548110610b9e57600080fd5b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610f3981611417565b610732611559565b60028181548110610f5157600080fd5b6000918252602090912001546001600160a01b0316905081565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156108c557600084815260209081902060408051606081019091526003850290910180546001600160a01b03168252600181018054929391929184019161100390611ac7565b80601f016020809104026020016040519081016040528092919081815260200182805461102f90611ac7565b801561107c5780601f106110515761010080835404028352916020019161107c565b820191906000526020600020905b81548152906001019060200180831161105f57829003601f168201915b5050505050815260200160028201805461109590611ac7565b80601f01602080910402602001604051908101604052809291908181526020018280546110c190611ac7565b801561110e5780601f106110e35761010080835404028352916020019161110e565b820191906000526020600020905b8154815290600101906020018083116110f157829003601f168201915b50505050508152505081526020019060010190610fba565b6001600160a01b03811660009081526007602052604081206001018054610ef690611ac7565b6001600160a01b03811660009081526008602090815260408083208054825181850281018501909352808352606094929391929091840182156106f5576000848152602090819020604080516080810182526003860290920180546001600160a01b0390811684526001808301548587015260029092015490811692840192909252600160a01b90910460ff16151560608301529083529092019101610689565b7f2d7a7544ecdf54eb35b6efa91f9c2c22f6bf39cb49dc786ed943755756b0830661121781611417565b336000908152600960205260408120905b81548110156112e457846001600160a01b031682828154811061124d5761124d611c2c565b60009182526020909120600390910201546001600160a01b031614801561129657508382828154811061128257611282611c2c565b906000526020600020906003020160010154145b156112dc5760018282815481106112af576112af611c2c565b906000526020600020906003020160020160146101000a81548160ff0219169083151502179055506112e4565b600101611228565b5050505050565b7f59646329c61c5d94892753ef41cd88158fe7a7302ebfce1612f9f9d0cad2643161131581611417565b336000908152600860205260408120905b81548110156112e457846001600160a01b031682828154811061134b5761134b611c2c565b60009182526020909120600390910201546001600160a01b031614801561139457508382828154811061138057611380611c2c565b906000526020600020906003020160010154145b156113ad5760018282815481106112af576112af611c2c565b600101611326565b600760205260009081526040902080546001820180546001600160a01b039092169291610bcd90611ac7565b600082815260016020819052604090912001546113fd81611417565b610613838361149a565b60038181548110610f5157600080fd5b6107328133611596565b600061142d8383610f6b565b6114925760008381526001602081815260408084206001600160a01b0387168086529252808420805460ff19169093179092559051339286917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45060016104f6565b5060006104f6565b60006114a68383610f6b565b156114925760008381526001602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104f6565b61150f6115d3565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6115616115f8565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861153c3390565b6115a08282610f6b565b6115cf5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610541565b5050565b60005460ff166115f657604051638dfc202b60e01b815260040160405180910390fd5b565b60005460ff16156115f65760405163d93c066560e01b815260040160405180910390fd5b60006020828403121561162e57600080fd5b81356001600160e01b03198116811461164657600080fd5b9392505050565b80356001600160a01b038116811461166457600080fd5b919050565b60008060006060848603121561167e57600080fd5b6116878461164d565b92506020840135915061169c6040850161164d565b90509250925092565b6000602082840312156116b757600080fd5b5035919050565b600080604083850312156116d157600080fd5b823591506116e16020840161164d565b90509250929050565b6000602082840312156116fc57600080fd5b6116468261164d565b602080825282518282018190526000918401906040840190835b818110156117765761176083855180516001600160a01b03908116835260208083015190840152604080830151909116908301526060908101511515910152565b602093909301926080929092019160010161171f565b509095945050505050565b6000815180845260005b818110156117a75760208185018101518683018201520161178b565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b03815116825260006020820151606060208501526117ee6060850182611781565b9050604083015184820360408601526118078282611781565b95945050505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b8281101561186957603f198786030184526118548583516117c7565b94506020938401939190910190600101611838565b50929695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261189c57600080fd5b813567ffffffffffffffff8111156118b6576118b6611875565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156118e5576118e5611875565b6040528181528382016020018510156118fd57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561192f57600080fd5b6119388461164d565b9250602084013567ffffffffffffffff81111561195457600080fd5b6119608682870161188b565b925050604084013567ffffffffffffffff81111561197d57600080fd5b6119898682870161188b565b9150509250925092565b6001600160a01b03841681526060602082018190526000906119b790830185611781565b82810360408401526119c98185611781565b9695505050505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b8281101561186957603f19878603018452611a178583516117c7565b945060209384019391909101906001016119fb565b602080825282518282018190526000918401906040840190835b8181101561177657611a8783855180516001600160a01b03908116835260208083015190840152604080830151909116908301526060908101511515910152565b6020939093019260809290920191600101611a46565b60008060408385031215611ab057600080fd5b611ab98361164d565b946020939093013593505050565b600181811c90821680611adb57607f821691505b602082108103611afb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561064c57806000526020600020601f840160051c81016020851015611b285750805b601f840160051c820191505b818110156112e45760008155600101611b34565b815167ffffffffffffffff811115611b6257611b62611875565b611b7681611b708454611ac7565b84611b01565b6020601f821160018114611baa5760008315611b925750848201515b600019600385901b1c1916600184901b1784556112e4565b600084815260208120601f198516915b82811015611bda5787850151825560209485019460019092019101611bba565b5084821015611bf85786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b604081526000611c1a6040830185611781565b82810360208401526118078185611781565b634e487b7160e01b600052603260045260246000fdfea26469706673582212206a082957d5d0c476e76eb07794b8fa272a972bf99c03183a679697eaa2de1d8b64736f6c634300081a0033",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ]
    },
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "approveGuaranteeRequest(address,uint256)": {
        "details": "This function just used temporaily to get request status to frontend via one function call."
      },
      "approveOwnershipVerificationRequest(address,uint256)": {
        "details": "This function just used temporaily to get request status to frontend via one function call. Request status should be either stored off chain or fetch from PropertyData onchain"
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "requestGuarantee(address,uint256,address)": {
        "details": "This requesting guarantee can be done via this function or off-chain logic"
      },
      "requestOwnershipVerification(address,uint256,address)": {
        "details": "This requesting ownership verification can be done via this function or off-chain logic"
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 417,
        "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
        "label": "_paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 26,
        "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
        "label": "_roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
      },
      {
        "astId": 594,
        "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
        "label": "ownershipVerifiers",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 604,
        "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
        "label": "guarantors",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 608,
        "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
        "label": "ownershipVerifierDataArray",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(OwnershipVeriferData)591_storage)dyn_storage"
      },
      {
        "astId": 612,
        "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
        "label": "guarantorDataArray",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_struct(GuarantorData)601_storage)dyn_storage"
      },
      {
        "astId": 617,
        "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
        "label": "ownershipVerifierData",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_struct(OwnershipVeriferData)591_storage)"
      },
      {
        "astId": 622,
        "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
        "label": "guarantorData",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_struct(GuarantorData)601_storage)"
      },
      {
        "astId": 646,
        "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
        "label": "_ownershipVerificationRequestsByVerifier",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_struct(PropertyOwnershipVerificationRequest)631_storage)dyn_storage)"
      },
      {
        "astId": 652,
        "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
        "label": "_guaranteeRequestsByGuarantor",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_array(t_struct(PropertyGuaranteeRequest)640_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(GuarantorData)601_storage)dyn_storage": {
        "base": "t_struct(GuarantorData)601_storage",
        "encoding": "dynamic_array",
        "label": "struct LinkRealVerifiedEntities.GuarantorData[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(OwnershipVeriferData)591_storage)dyn_storage": {
        "base": "t_struct(OwnershipVeriferData)591_storage",
        "encoding": "dynamic_array",
        "label": "struct LinkRealVerifiedEntities.OwnershipVeriferData[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(PropertyGuaranteeRequest)640_storage)dyn_storage": {
        "base": "t_struct(PropertyGuaranteeRequest)640_storage",
        "encoding": "dynamic_array",
        "label": "struct LinkRealVerifiedEntities.PropertyGuaranteeRequest[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(PropertyOwnershipVerificationRequest)631_storage)dyn_storage": {
        "base": "t_struct(PropertyOwnershipVerificationRequest)631_storage",
        "encoding": "dynamic_array",
        "label": "struct LinkRealVerifiedEntities.PropertyOwnershipVerificationRequest[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_struct(PropertyGuaranteeRequest)640_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct LinkRealVerifiedEntities.PropertyGuaranteeRequest[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(PropertyGuaranteeRequest)640_storage)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_struct(PropertyOwnershipVerificationRequest)631_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct LinkRealVerifiedEntities.PropertyOwnershipVerificationRequest[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(PropertyOwnershipVerificationRequest)631_storage)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(GuarantorData)601_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct LinkRealVerifiedEntities.GuarantorData)",
        "numberOfBytes": "32",
        "value": "t_struct(GuarantorData)601_storage"
      },
      "t_mapping(t_address,t_struct(OwnershipVeriferData)591_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct LinkRealVerifiedEntities.OwnershipVeriferData)",
        "numberOfBytes": "32",
        "value": "t_struct(OwnershipVeriferData)591_storage"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)21_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(GuarantorData)601_storage": {
        "encoding": "inplace",
        "label": "struct LinkRealVerifiedEntities.GuarantorData",
        "members": [
          {
            "astId": 596,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "guarantorAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 598,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "guarantorName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 600,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "guarantorPublicURL",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(OwnershipVeriferData)591_storage": {
        "encoding": "inplace",
        "label": "struct LinkRealVerifiedEntities.OwnershipVeriferData",
        "members": [
          {
            "astId": 586,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "verifierAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 588,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "ownershipVerifierName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 590,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "ownershipVerifierPublicURL",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(PropertyGuaranteeRequest)640_storage": {
        "encoding": "inplace",
        "label": "struct LinkRealVerifiedEntities.PropertyGuaranteeRequest",
        "members": [
          {
            "astId": 633,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "propertyOwner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 635,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "propertyId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 637,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "requestedGuarantor",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 639,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "isApproved",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(PropertyOwnershipVerificationRequest)631_storage": {
        "encoding": "inplace",
        "label": "struct LinkRealVerifiedEntities.PropertyOwnershipVerificationRequest",
        "members": [
          {
            "astId": 624,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "propertyOwner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 626,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "propertyId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 628,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "requestedVerifier",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 630,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "isApproved",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(RoleData)21_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 18,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 20,
            "contract": "contracts/LinkRealVerifiedEntities.sol:LinkRealVerifiedEntities",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}